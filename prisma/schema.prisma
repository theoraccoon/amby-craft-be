generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Role {
  id          String   @id @default(cuid())
  name        String   @unique
  description String?
  identifier  String   @unique
  users       User[]
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@map("roles")
}

model User {
  id             String    @id @default(cuid())
  firstName      String    @map("first_name")
  lastName       String?   @map("last_name")
  email          String    @unique
  role           Role      @relation(fields: [roleId], references: [id])
  roleId         String    @map("role_id")
  googleId       String?   @unique @map("google_id")
  refreshToken   String?   @map("refresh_token")
  profilePicture String?   @map("profile_picture")
  password       String?
  createdAt      DateTime  @default(now()) @map("created_at")
  updatedAt      DateTime  @updatedAt @map("updated_at")
  courses        Course[]
  lessons        Lesson[]
  contents       Content[]

  @@map("users")
}

model Course {
  id          String   @id @default(cuid())
  title       String
  description String?
  user        User     @relation(fields: [userId], references: [id])
  userId      String   @map("user_id")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  lessons     Lesson[]

  @@map("courses")
}

model Lesson {
  id           String     @id @default(cuid())
  title        String
  position     Int
  user         User       @relation(fields: [userId], references: [id])
  userId       String     @map("user_id")
  course       Course     @relation(fields: [courseId], references: [id])
  courseId     String     @map("course_id")
  lessonType   LessonType @relation(fields: [lessonTypeId], references: [id])
  lessonTypeId String     @map("lesson_type_id")
  createdAt    DateTime   @default(now()) @map("created_at")
  updatedAt    DateTime   @updatedAt @map("updated_at")
  contents     Content[]

  @@map("lessons")
}

model LessonType {
  id          String   @id @default(cuid())
  name        String
  description String?
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  lessons     Lesson[]

  @@map("lesson_types")
}

model Content {
  id        String   @id @default(cuid())
  position  Int
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @map("user_id")
  lesson    Lesson   @relation(fields: [lessonId], references: [id])
  lessonId  String   @map("lesson_id")
  type      String
  data      Json
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("contents")
}
